const baseUpQueries = [
    ` CREATE TABLE IF NOT EXISTS users
(
  id                       INTEGER PRIMARY KEY NOT NULL,
  name                     VARCHAR             NOT NULL,
  lastName                 VARCHAR             NOT NULL,
  email                    VARCHAR             NOT NULL,
  lastLogin                DATETIME,
  lastActive               DATETIME,
  profileImage             TEXT,
  emailNotificationsActive INTEGER  DEFAULT 1,
  password                 VARCHAR             NOT NULL,
  rememberToken            VARCHAR,
  createdAt                DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updatedAt                DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  stripeId                 VARCHAR,
  cardBrand                VARCHAR,
  cardLastFour             VARCHAR,
  trialEndsAt              DATE,
  profileId                INTEGER,
  userSettingId            INTEGER
);`,
    ` CREATE TABLE IF NOT EXISTS locations
(
  id           INTEGER PRIMARY KEY NOT NULL,
  name         VARCHAR,
  placeId      VARCHAR,
  streetNumber VARCHAR,
  city         VARCHAR,
  state        VARCHAR,
  countryCode  VARCHAR,
  country      VARCHAR,
  postCode     VARCHAR,
  district     VARCHAR,
  latitude     DECIMAL(12, 8),
  longitude    DECIMAL(12, 8),
  createdAt    DATETIME DEFAULT current_timestamp NOT NULL,
  updatedAt    DATETIME DEFAULT current_timestamp NOT NULL
);`,
    ` CREATE TABLE IF NOT EXISTS titles
(
  id                    INTEGER PRIMARY KEY NOT NULL,
  price                 INTEGER DEFAULT 0,
  searchType            VARCHAR,
  searchTypeDetail      VARCHAR,
  searchTypeDetailValue VARCHAR,
  dateSearch            DATETIME,
  dateEffective         DATETIME,
  condoName             VARCHAR,
  district              VARCHAR,
  landLot               VARCHAR,
  section               INTEGER,
  township              VARCHAR,
  range                 INTEGER,
  lot                   VARCHAR,
  block                 VARCHAR,
  pod                   VARCHAR,
  subdivisionSection    VARCHAR,
  parking               VARCHAR,
  garage                VARCHAR,
  interestCommon        VARCHAR,
  parcel                VARCHAR,
  phase                 VARCHAR,
  unit                  VARCHAR,
  storage               VARCHAR,
  wine                  VARCHAR,

  revised               VARCHAR,
  longLegal             TEXT,
  type                  VARCHAR,
  gmd                   VARCHAR,
  zones                 TEXT,
  rtv                   VARCHAR,
  dbPg                  VARCHAR,
  jtwros                VARCHAR,
  note                  TEXT,

  salesCount            INTEGER,
  status                VARCHAR             NOT NULL,
  lastTitleStep         VARCHAR,
  apartment             VARCHAR,
  chainTitleType        VARCHAR,
  certifiedByUser       INTEGER  DEFAULT 0 NOT NULL,

  createdAt             DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updatedAt             DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,

  ownerId               INTEGER,
  locationId            INTEGER UNIQUE,
  FOREIGN KEY (ownerId) REFERENCES users (id),
  FOREIGN KEY (locationId) REFERENCES locations (id)
);`,
    ` CREATE TABLE IF NOT EXISTS title_buyer
(
  id        INTEGER PRIMARY KEY NOT NULL,
  name      VARCHAR         NOT NULL,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  titleId   INTEGER,
  FOREIGN KEY (titleId) REFERENCES titles (id)
);`,
    ` CREATE TABLE IF NOT EXISTS title_seller
(
  id        INTEGER PRIMARY KEY  NOT NULL,
  name      VARCHAR          NOT NULL,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  titleId   INTEGER             NOT NULL,
  FOREIGN KEY (titleId) REFERENCES titles (id)
);`,
    ` CREATE TABLE IF NOT EXISTS title_detail
(
  id                              INTEGER PRIMARY KEY  NOT NULL,
  clientPrice                     INTEGER DEFAULT 0,
  companyName                     VARCHAR,
  companyFileNumber               INTEGER,
  companyClientName               VARCHAR,
  companyClientFileNumber         VARCHAR,
  searchTypeTaxInformationRequest INTEGER  DEFAULT 0 NOT NULL,
  searchTypeCopiesRequested       VARCHAR,
  specialInstructions             TEXT,
  interestResidential             VARCHAR,
  tract                           VARCHAR,
  building                        VARCHAR,
  acres                           VARCHAR,
  metesBound                      VARCHAR,
  hasRealState                    INTEGER  DEFAULT 0 NOT NULL,
  hasCivil                        INTEGER  DEFAULT 0 NOT NULL,
  hasProbateEstate                INTEGER  DEFAULT 0 NOT NULL,
  hasLiens                        INTEGER  DEFAULT 0 NOT NULL,
  hasTaxes                        INTEGER  DEFAULT 0 NOT NULL,
  isOpenSection                   INTEGER  DEFAULT 0 NOT NULL,
  createdAt                       DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updatedAt                       DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  titleId                         INTEGER          NOT NULL,
  FOREIGN KEY (titleId) REFERENCES titles (id)
);`,
    ` CREATE TABLE IF NOT EXISTS title_book_page (
  id                  INTEGER PRIMARY KEY NOT NULL,
  book                VARCHAR,
  page                VARCHAR,
  withoutBookPageInfo VARCHAR,
  type                VARCHAR,
  createdAt           DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updatedAt           DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  titleId             INTEGER             NOT NULL,
  FOREIGN KEY (titleId) REFERENCES titles (id)
);`,
    ` CREATE TABLE IF NOT EXISTS deed_type (
  id        INTEGER PRIMARY KEY NOT NULL,
  name      VARCHAR             NOT NULL,
  code      VARCHAR             NOT NULL,
  scope     VARCHAR             NOT NULL,
  docType   VARCHAR             NOT NULL,
  createdAt DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL
);`,
    ` CREATE TABLE IF NOT EXISTS mortgage (
  id               INTEGER PRIMARY KEY NOT NULL,
  grantor          VARCHAR,
  grantee          VARCHAR,
  amountBorrowed   FLOAT,
  deedBook         VARCHAR,
  deedPage         VARCHAR,
  pudCondo         VARCHAR,
  deedDate         DATETIME,
  deedRecorded     DATETIME,
  assignedTransfer VARCHAR,
  images           TEXT,
  createdAt        DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updatedAt        DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  masterDocumentId INTEGER,
  titleId          INTEGER             NOT NULL,
  deedTypeId       INTEGER             NOT NULL,
  FOREIGN KEY (titleId) REFERENCES titles (id),
  FOREIGN KEY (deedTypeId) REFERENCES deed_type (id),
  FOREIGN KEY (masterDocumentId) REFERENCES mortgage (id)
);`,
    ` CREATE TABLE IF NOT EXISTS deed (
  id            INTEGER PRIMARY KEY NOT NULL,
  grantor       VARCHAR,
  grantee       VARCHAR,
  deedBook      VARCHAR,
  deedPage      VARCHAR,
  deedDate      DATETIME,
  recordingDate DATETIME,
  images        TEXT,
  createdAt     DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updatedAt     DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  titleId       INTEGER             NOT NULL,
  deedTypeId    INTEGER             NOT NULL,
  FOREIGN KEY (titleId) REFERENCES titles (id),
  FOREIGN KEY (deedTypeId) REFERENCES deed_type (id)
);`,
    ` CREATE TABLE IF NOT EXISTS lien (
  id                  INTEGER PRIMARY KEY NOT NULL,
  lienorPlaintiff     VARCHAR,
  debtorDefendant     VARCHAR,
  deedBook            VARCHAR,
  deedPage            VARCHAR,
  lienAmount          FLOAT,
  assignedTransferred VARCHAR,
  images              TEXT,
  createdAt           DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updatedAt           DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  masterDocumentId    INTEGER,
  titleId             INTEGER             NOT NULL,
  deedTypeId          INTEGER             NOT NULL,
  FOREIGN KEY (titleId) REFERENCES titles (id),
  FOREIGN KEY (deedTypeId) REFERENCES deed_type (id),
  FOREIGN KEY (masterDocumentId) REFERENCES lien (id)
);`,
    ` CREATE TABLE IF NOT EXISTS plat_floor_plan (
  id                  INTEGER PRIMARY KEY NOT NULL,
  platBook            VARCHAR,
  platPage            VARCHAR,
  nullaBona           VARCHAR,
  withoutBookPageInfo VARCHAR,
  note                TEXT,
  images              TEXT,
  createdAt           DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updatedAt           DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  masterDocumentId    INTEGER,
  titleId             INTEGER             NOT NULL,
  deedTypeId          INTEGER             NOT NULL,
  FOREIGN KEY (titleId) REFERENCES titles (id),
  FOREIGN KEY (deedTypeId) REFERENCES deed_type (id),
  FOREIGN KEY (masterDocumentId) REFERENCES plat_floor_plan (id)
);`,
    ` CREATE TABLE IF NOT EXISTS easement (
  id            INTEGER PRIMARY KEY NOT NULL,
  recordingDate DATETIME,
  deedBook      VARCHAR,
  deedPage      VARCHAR,
  deedDate      DATETIME,
  grantor       VARCHAR,
  grantee       VARCHAR,
  images        TEXT,
  createdAt     DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updatedAt     DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  titleId       INTEGER             NOT NULL,
  deedTypeId    INTEGER             NOT NULL,
  FOREIGN KEY (titleId) REFERENCES titles (id),
  FOREIGN KEY (deedTypeId) REFERENCES deed_type (id)
);`,
    ` CREATE TABLE IF NOT EXISTS misc_civil_probate (
  id             INTEGER PRIMARY KEY NOT NULL,
  instrumentType VARCHAR,
  fileNumber     INTEGER,
  bookType       VARCHAR,
  book       VARCHAR,
  page       VARCHAR,
  note           TEXT,
  images         TEXT,
  createdAt      DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updatedAt      DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  titleId        INTEGER             NOT NULL,
  deedTypeId     INTEGER             NOT NULL,
  FOREIGN KEY (titleId) REFERENCES titles (id),
  FOREIGN KEY (deedTypeId) REFERENCES deed_type (id)
);`,
    ` CREATE TABLE IF NOT EXISTS tax (
  id                        INTEGER PRIMARY KEY                 NOT NULL,
  county                    VARCHAR,
  taxYear                   VARCHAR,
  taxpayerName              VARCHAR,
  assessedValue             FLOAT,
  parcelId                  VARCHAR,
  amountPaid                FLOAT,
  datePaid                  DATETIME,
  amountOwned               FLOAT,
  dateDue                   DATETIME,
  municipality              VARCHAR,
  accountNumber             VARCHAR,
  municipalAmountPaid       FLOAT,
  municipalDatePaid         DATETIME,
  municipalAmountOwned      FLOAT,
  municipalDateDue          DATETIME,
  water                     FLOAT,
  sewer                     FLOAT,
  sanitation                FLOAT,
  documentDescription       VARCHAR,
  images                    TEXT,
  createdAt                 DATETIME DEFAULT CURRENT_TIMESTAMP  NOT NULL,
  updatedAt                 DATETIME DEFAULT CURRENT_TIMESTAMP  NOT NULL,
  titleId                   INTEGER                             NOT NULL,
  deedTypeId                INTEGER                             NOT NULL,
  FOREIGN KEY (titleId) REFERENCES titles (id),
  FOREIGN KEY (deedTypeId) REFERENCES deed_type (id)
);`,
    ` CREATE TABLE IF NOT EXISTS covenant (
  id                     INTEGER PRIMARY KEY NOT NULL,
  type                   VARCHAR,
  dateRecorded           DATETIME,
  instrumentDate         DATETIME,
  deedBook               VARCHAR,
  deedPage               VARCHAR,
  deedImages             TEXT,
  reRecordedList         TEXT,
  supplementedList       TEXT,
  amendedList            TEXT,
  hasConditions          INTEGER  DEFAULT 0 NOT NULL,
  isMandatoryAssociation INTEGER  DEFAULT 0 NOT NULL,
  revisedList            TEXT,
  createdAt              DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updatedAt              DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
  titleId                INTEGER             NOT NULL,
  FOREIGN KEY (titleId) REFERENCES titles (id)
);`
];

export default baseUpQueries;